// Generated by CoffeeScript 1.6.3
(function() {
  'use strict';
  /* Controllers*/

  var app, app_name,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  app_name = "myApp";

  app = angular.module("" + app_name + ".controllers", []);

  app.controller('myCtrl1', [
    '$scope', function($scope) {
      $scope.name = "view 1";
      $scope.say = function() {
        return window.alert.apply(window, arguments);
      };
      return $scope.test = 4;
    }
  ]);

  app.controller('myCtrl2', [
    '$scope', function($scope) {
      return $scope.test = 2;
    }
  ]);

  app.controller('CtrlUserBoard', [
    '$scope', function($scope) {
      var Habit;
      $scope.name = "view 3";
      $scope.say = function() {
        return window.alert.apply(window, arguments);
      };
      $scope.test = 4;
      $scope.checkboxImages = ["images/unchecked_checkbox.png", "images/tick-green.png", "images/red-cross.png"];
      Habit = (function() {
        function Habit(name, pastResults) {
          this.name = name;
          this.pastResults = pastResults;
          this.clicked = __bind(this.clicked, this);
          alert(this.pastResults);
          this.streak = this.pastResults[0];
        }

        Habit.prototype.ticked = 0;

        Habit.previousStreak = Habit.pastResults[0];

        Habit.prototype.increaseStreak = function() {
          if (this.previousStreak > 1) {
            return this.previousStreak + 1;
          } else {
            return 1;
          }
        };

        Habit.prototype.sameStreak = function() {
          return this.previousStreak;
        };

        Habit.prototype.failedStreak = function() {
          if (this.previousStreak < 0) {
            return this.previousStreak - 1;
          } else {
            return -1;
          }
        };

        Habit.prototype.clicked = function() {
          this.ticked = (this.ticked + 1) % 3;
          return this.streak = (function() {
            switch (false) {
              case this.ticked !== 1:
                return this.increaseStreak();
              case this.ticked !== 2:
                return this.failedStreak();
              default:
                return this.sameStreak();
            }
          }).call(this);
        };

        return Habit;

      })();
      return $scope.habits = [new Habit('meditation', [-2]), new Habit('exercise', [5])];
    }
  ]);

}).call(this);
